version: "3.3"

networks:
  backend:

services:
  ### Customizer ################################
  customizer:
    build:
      context: ../
      dockerfile: ./build/customizer/Dockerfile
    ports:
      - ${CUSTOMIZER_PORT}:80
    depends_on:
      - mongo
      - redis
    networks:
      - backend

  ### MongoDB ###################################
  mongo:
    build: ./mongo
    restart: on-failure
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: secret
      MONGO_CUSTOMIZER_USER: ${MONGO_USER:-customizer}
      MONGO_CUSTOMIZER_PASSWORD: ${MONGO_PASSWORD:-secret}
      MONGO_CUSTOMIZER_DATABASE: ${MONGO_DATABASE:-customizer}
    volumes:
      - ./mongo/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
      - ./mongo/mongo.conf:/etc/mongod.conf
      - ${DATA_PATH_HOST}/mongo:/data/db
      - ${DATA_PATH_HOST}/mongo_config:/data/configdb
    ports:
      - "${MONGO_PORT}:27017"
    networks:
      - backend

  ### Redis #####################################
  redis:
    build: ./redis
    restart: on-failure
    volumes:
      - ${DATA_PATH_HOST}/redis:/data
    command: --requirepass ${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - backend

