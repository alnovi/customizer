version: "3.3"

networks:
  backend:

services:
  ### Customizer ################################
  customizer:
    build:
      context: ./
      dockerfile: ./build/customizer/Dockerfile
    container_name: customizer
    environment:
      GLOBAL_CERT_FILE: ${GLOBAL_CERT_FILE:-}
      GLOBAL_KEY_FILE: ${GLOBAL_KEY_FILE:-}
      HTTP_SERVER_HOST: ${HTTP_SERVER_HOST:-0.0.0.0}
      HTTP_SERVER_PORT: ${HTTP_SERVER_PORT:-80}
      HTTP_SERVER_TIMEOUT: ${HTTP_SERVER_TIMEOUT:-2}
      STORAGE_MONGO_HOST: ${STORAGE_MONGO_HOST:-mongo}
      STORAGE_MONGO_PORT: ${STORAGE_MONGO_PORT:-27017}
      STORAGE_MONGO_DATABASE: ${STORAGE_MONGO_DATABASE:-customizer}
      STORAGE_MONGO_USER: ${STORAGE_MONGO_USER:-customizer}
      STORAGE_MONGO_PASSWORD: ${STORAGE_MONGO_PASSWORD:-secret}
      STORAGE_MONGO_TIMEOUT: ${STORAGE_MONGO_TIMEOUT:-5}
      STORAGE_REDIS_HOST: ${STORAGE_REDIS_HOST:-redis}
      STORAGE_REDIS_PORT: ${STORAGE_REDIS_PORT:-6379}
      STORAGE_REDIS_DATABASE: ${STORAGE_REDIS_DATABASE:-0}
      STORAGE_REDIS_PASSWORD: ${STORAGE_REDIS_PASSWORD:-secret}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      LOG_FORMAT: ${LOG_FORMAT:-json}
      SENTRY_URL: ${SENTRY_URL:-}
      SENTRY_DEBUG: ${SENTRY_DEBUG:-false}
      SENTRY_TIMEOUT: ${SENTRY_TIMEOUT:-1}
    ports:
      - ${CUSTOMIZER_PORT}:80
    depends_on:
      - mongo
      - redis
    networks:
      - backend

  ### MongoDB ###################################
  mongo:
    build: ./build/mongo
    container_name: mongo
    restart: on-failure
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: secret
      MONGO_CUSTOMIZER_USER: ${STORAGE_MONGO_USER:-customizer}
      MONGO_CUSTOMIZER_PASSWORD: ${STORAGE_MONGO_PASSWORD:-secret}
      MONGO_CUSTOMIZER_DATABASE: ${STORAGE_MONGO_DATABASE:-customizer}
    volumes:
      - ./build/mongo/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
      - ./build/mongo/mongo.conf:/etc/mongod.conf
      - ${DATA_PATH_HOST}/mongo:/data/db
      - ${DATA_PATH_HOST}/mongo_config:/data/configdb
    ports:
      - "${STORAGE_MONGO_PORT}:27017"
    networks:
      - backend

  ### Redis #####################################
  redis:
    build: ./build/redis
    container_name: redis
    restart: on-failure
    volumes:
      - ${DATA_PATH_HOST}/redis:/data
    command: --requirepass ${STORAGE_REDIS_PASSWORD}
    ports:
      - "${STORAGE_REDIS_PORT}:6379"
    networks:
      - backend
